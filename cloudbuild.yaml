steps:
  # Install backend dependencies
  - name: 'node:18'
    dir: 'backend'
    entrypoint: 'npm'
    args: ['install']
    id: 'backend-install'
    
  # Build backend docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: ['build', '-t', 'gcr.io/empyrean-harbor-456906-s2/backend:latest', '.']
    id: 'backend-build'
    waitFor: ['backend-install']

  # Push backend to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/empyrean-harbor-456906-s2/backend:latest']
    id: 'backend-push'
    waitFor: ['backend-build']

  # Install frontend dependencies
  - name: 'node:18'
    dir: 'frontend'
    entrypoint: 'npm'
    args: ['install']
    id: 'frontend-install'
    
  # Fix permissions for vite
  - name: 'node:18'
    dir: 'frontend'
    entrypoint: 'chmod'
    args: ['-R', '755', './node_modules/.bin/']
    id: 'fix-permissions'
    waitFor: ['frontend-install']
    
  # Build frontend docker image with production build
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args: ['build', '-t', 'gcr.io/empyrean-harbor-456906-s2/frontend:latest', '.']
    id: 'frontend-docker-build'
    waitFor: ['fix-permissions']

  # Push frontend to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/empyrean-harbor-456906-s2/frontend:latest']
    id: 'frontend-push'
    waitFor: ['frontend-docker-build']
    
  # Add version tag to image for Argo CD detection
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk' 
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker tag gcr.io/empyrean-harbor-456906-s2/backend:latest gcr.io/empyrean-harbor-456906-s2/backend:$BUILD_ID
        docker tag gcr.io/empyrean-harbor-456906-s2/frontend:latest gcr.io/empyrean-harbor-456906-s2/frontend:$BUILD_ID
        docker push gcr.io/empyrean-harbor-456906-s2/backend:$BUILD_ID
        docker push gcr.io/empyrean-harbor-456906-s2/frontend:$BUILD_ID
    id: 'tag-images'
    waitFor: ['backend-push', 'frontend-push']

  # Update image tag in deployment yaml
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sed -i "s|gcr.io/empyrean-harbor-456906-s2/backend:.*|gcr.io/empyrean-harbor-456906-s2/backend:${BUILD_ID}|g" backend-deployment.yaml
        sed -i "s|gcr.io/empyrean-harbor-456906-s2/frontend:.*|gcr.io/empyrean-harbor-456906-s2/frontend:${BUILD_ID}|g" frontend-deployment.yaml
    id: 'update-yaml'
    waitFor: ['tag-images']

    # Git operations with correct secret syntax
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Tạo thư mục để lưu các file
        BUILD_DIR="builds/$BUILD_ID"
        
        # Lưu các file YAML đã cập nhật vào Cloud Storage
        echo "Đang lưu các file triển khai đã cập nhật với tag ${BUILD_ID}"
        gsutil cp backend-deployment.yaml gs://empyrean-harbor-456906-s2_cloudbuild/source/$BUILD_DIR/backend-deployment.yaml
        gsutil cp frontend-deployment.yaml gs://empyrean-harbor-456906-s2_cloudbuild/source/$BUILD_DIR/frontend-deployment.yaml
        
        # Lưu thêm các file quan trọng khác (nếu cần)
        gsutil cp backend-service.yaml gs://empyrean-harbor-456906-s2_cloudbuild/source/$BUILD_DIR/backend-service.yaml || echo "Không tìm thấy backend-service.yaml"
        gsutil cp frontend-service.yaml gs://empyrean-harbor-456906-s2_cloudbuild/source/$BUILD_DIR/frontend-service.yaml || echo "Không tìm thấy frontend-service.yaml"
        
        # Tạo file log chứa thông tin build
        echo "Build ID: $BUILD_ID" > build-info.txt
        echo "Thời gian: $(date)" >> build-info.txt
        echo "Project: empyrean-harbor-456906-s2" >> build-info.txt
        gsutil cp build-info.txt gs://empyrean-harbor-456906-s2_cloudbuild/source/$BUILD_DIR/build-info.txt
        
        echo "Các file đã được lưu vào gs://empyrean-harbor-456906-s2_cloudbuild/source/$BUILD_DIR/"
        
        # In nội dung các file để dễ theo dõi trong log
        echo "=== Nội dung file backend-deployment.yaml ==="
        cat backend-deployment.yaml
        echo "=== Nội dung file frontend-deployment.yaml ==="
        cat frontend-deployment.yaml
    id: 'save-deployment-files'
    waitFor: ['update-yaml']

  # This step will only run if the previous step fails
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Failed to commit changes to GitHub. Please check your authentication credentials."
        echo "Image tags updated to ${BUILD_ID} in deployment files."
        echo "Please commit and push these changes manually if needed."
    id: 'update-yaml-only'
    waitFor: ['update-yaml']

images:
  - 'gcr.io/empyrean-harbor-456906-s2/backend:latest'
  - 'gcr.io/empyrean-harbor-456906-s2/frontend:latest'
  - 'gcr.io/empyrean-harbor-456906-s2/backend:$BUILD_ID'
  - 'gcr.io/empyrean-harbor-456906-s2/frontend:$BUILD_ID'

timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY
