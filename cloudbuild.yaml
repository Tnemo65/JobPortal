steps:
  # Install backend dependencies
  - name: 'node:18'
    dir: 'backend'
    entrypoint: 'npm'
    args: ['install']
    id: 'backend-install'
    
  # Build backend docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: ['build', '-t', 'gcr.io/empyrean-harbor-456906-s2/backend:latest', '.']
    id: 'backend-build'
    waitFor: ['backend-install']

  # Push backend to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/empyrean-harbor-456906-s2/backend:latest']
    id: 'backend-push'
    waitFor: ['backend-build']

  # Install frontend dependencies
  - name: 'node:18'
    dir: 'frontend'
    entrypoint: 'npm'
    args: ['install']
    id: 'frontend-install'
    
  # Fix permissions for vite
  - name: 'node:18'
    dir: 'frontend'
    entrypoint: 'chmod'
    args: ['-R', '755', './node_modules/.bin/']
    id: 'fix-permissions'
    waitFor: ['frontend-install']
    
  # Build frontend docker image with production build
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args: ['build', '-t', 'gcr.io/empyrean-harbor-456906-s2/frontend:latest', '.']
    id: 'frontend-docker-build'
    waitFor: ['fix-permissions']

  # Push frontend to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/empyrean-harbor-456906-s2/frontend:latest']
    id: 'frontend-push'
    waitFor: ['frontend-docker-build']
    
  # Add version tag to image for Argo CD detection
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk' 
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker tag gcr.io/empyrean-harbor-456906-s2/backend:latest gcr.io/empyrean-harbor-456906-s2/backend:$BUILD_ID
        docker tag gcr.io/empyrean-harbor-456906-s2/frontend:latest gcr.io/empyrean-harbor-456906-s2/frontend:$BUILD_ID
        docker push gcr.io/empyrean-harbor-456906-s2/backend:$BUILD_ID
        docker push gcr.io/empyrean-harbor-456906-s2/frontend:$BUILD_ID
    id: 'tag-images'
    waitFor: ['backend-push', 'frontend-push']

  # Update image tag in deployment yaml
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sed -i "s|gcr.io/empyrean-harbor-456906-s2/backend:.*|gcr.io/empyrean-harbor-456906-s2/backend:${BUILD_ID}|g" backend-deployment.yaml
        sed -i "s|gcr.io/empyrean-harbor-456906-s2/frontend:.*|gcr.io/empyrean-harbor-456906-s2/frontend:${BUILD_ID}|g" frontend-deployment.yaml
    id: 'update-yaml'
    waitFor: ['tag-images']

  # Commit and push changes to GitHub
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    secretEnv: ['GITHUB_TOKEN']
    args:
      - '-c'
      - |
        # Configure git credentials
        git config --global user.email "cloudbuild@example.com"
        git config --global user.name "Cloud Build"
        
        # Setup authentication for GitHub
        git config --global credential.helper 'store --file /tmp/git-credentials'
        echo "https://oauth2:$$GITHUB_TOKEN@github.com" > /tmp/git-credentials
        
        # Clone repository
        git clone https://github.com/Tnemo65/JobPortal.git repo
        cp backend-deployment.yaml frontend-deployment.yaml repo/
        cd repo
        
        # Stage, commit, and push changes
        git add backend-deployment.yaml frontend-deployment.yaml
        git commit -m "Update image tags to ${BUILD_ID} [skip ci]" || echo "No changes to commit"
        git push origin main
    id: 'commit-and-push'
    waitFor: ['update-yaml']

  # This step will only run if the previous step fails (e.g., authentication issues)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Failed to commit changes to GitHub. Please check your authentication credentials."
        echo "Image tags updated to ${BUILD_ID} in deployment files."
        echo "Please commit and push these changes manually if needed."
    id: 'update-yaml-only'
    waitFor: ['update-yaml']

images:
  - 'gcr.io/empyrean-harbor-456906-s2/backend:latest'
  - 'gcr.io/empyrean-harbor-456906-s2/frontend:latest'
  - 'gcr.io/empyrean-harbor-456906-s2/backend:$BUILD_ID'
  - 'gcr.io/empyrean-harbor-456906-s2/frontend:$BUILD_ID'

availableSecrets:
  secretManager:
    - versionName: projects/empyrean-harbor-456906-s2/secrets/github-token/versions/latest
      env: 'GITHUB_TOKEN'

timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY
